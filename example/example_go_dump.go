package main

import (
	"bufio"
	"encoding/json"
	"fmt"
	"github.com/ifengshai/go_utils"
	"os"
)

type AutoGenerated struct {
	ExecSort        int           `json:"exec_sort"`
	CreateTime      string        `json:"create_time"`
	ApplicationName string        `json:"application_name"`
	Level           string        `json:"level"`
	TraceID         string        `json:"trace_id"`
	Context         []interface{} `json:"context"`
	Message         string        `json:"message"`
}

type Context struct {
	CampaignID      int    `json:"CampaignId"`
	ActionTrackerID int    `json:"ActionTrackerId"`
	EventDate       string `json:"EventDate"`
	OrderID         string `json:"OrderId"`
	CurrencyCode    string `json:"CurrencyCode"`
	OrderPromoCode  string `json:"OrderPromoCode"`
	CustomerID      string `json:"CustomerId"`
	CustomerEmail   string `json:"CustomerEmail"`
	ItemSubTotal1   string `json:"ItemSubTotal1"`
	ItemCategory1   string `json:"ItemCategory1"`
	ItemSku1        string `json:"ItemSku1"`
	ItemQuantity1   int    `json:"ItemQuantity1"`
	ItemName1       string `json:"ItemName1"`
	ItemSubTotal2   string `json:"ItemSubTotal2"`
	ItemCategory2   string `json:"ItemCategory2"`
	ItemSku2        string `json:"ItemSku2"`
	ItemQuantity2   int    `json:"ItemQuantity2"`
	ItemName2       string `json:"ItemName2"`
}

func main() {
	// 打开文件
	file, err := os.Open("./../file/a.json")
	if err != nil {
		fmt.Println("打开文件出错:", err)
		return
	}
	defer file.Close()

	// 创建一个 Scanner 用于逐行读取文件
	scanner := bufio.NewScanner(file)

	// 逐行读取文件内容
	for scanner.Scan() {
		line := scanner.Text()

		// 示例 JSON 字符串
		jsonData := line

		// 解析 JSON
		var data AutoGenerated
		err := json.Unmarshal([]byte(jsonData), &data)
		if err != nil {
			fmt.Println("解析 JSON 出错:", err)
			return
		}

		for _, v := range data.Context {
			switch val := v.(type) {
			case map[string]interface{}:
				var c Context
				a, ok := val["json"].(map[string]string)
				if ok {
					json.Unmarshal([]byte(a["json"]), &c)
					go_utils.Printf(c)
					os.Exit(1)
				}

				if ok {
					fmt.Printf("%v\n", a["OrderId"])
				}

			default:
			}
		}

	}

	// 检查是否有错误发生
	if err := scanner.Err(); err != nil {
		fmt.Println("读取文件出错:", err)
	}
}
